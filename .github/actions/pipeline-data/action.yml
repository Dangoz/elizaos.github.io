name: "Setup Pipeline Data Branch"
description: "Sets up a worktree for the pipeline-data branch and syncs data"
inputs:
  operation:
    description: "Operation to perform: setup, update, or cleanup"
    required: true
  source_path:
    description: "Source path to copy data from (for update operation), relative to the main workspace"
    required: false
    default: "./data/"
  exclude_pattern:
    description: "Pattern to exclude when copying files"
    required: false
    default: "*.sqlite"
  commit_message:
    description: "Commit message for updates"
    required: false
    default: 'Pipeline run: $(date -u +"%Y-%m-%d")'

runs:
  using: "composite"
  steps:
    # Setup operation - creates worktree and copies data to workspace
    - name: Setup pipeline-data branch
      if: inputs.operation == 'setup'
      shell: bash
      run: |
        mkdir -p data
        # Configure git
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"

        # Check if pipeline-data branch exists
        if git ls-remote --heads origin pipeline-data | grep pipeline-data; then
          echo "Pipeline data branch exists, retrieving data..."
          
          # Create a worktree for pipeline-data branch
          git worktree add --detach pipeline-data-worktree
          cd pipeline-data-worktree
          git checkout pipeline-data
          
          # Copy data files to main workspace
          cd ..
          cp -r pipeline-data-worktree/data/. data/ 2>/dev/null || echo "No data files found in pipeline-data branch"
        else
          echo "Creating new pipeline-data branch..."
          
          # Create a worktree with new orphan branch
          git worktree add --detach pipeline-data-worktree
          cd pipeline-data-worktree
          git checkout --orphan pipeline-data
          git rm -rf . 2>/dev/null || true
          
          # Create .gitignore that only keeps data folder
          echo "# Ignore everything except data directory" > .gitignore
          echo "/*" >> .gitignore
          echo "!data/" >> .gitignore
          echo "!.gitignore" >> .gitignore
          echo "!README.md" >> .gitignore
          echo "" >> .gitignore
          echo "# Exclude database file" >> .gitignore
          echo "data/db.sqlite" >> .gitignore
          
          # Create a README
          echo "# Pipeline Data" > README.md
          echo "This branch contains data files generated by the pipeline. Do not modify manually." >> README.md
          
          git add .gitignore README.md
          git commit -m "Initialize pipeline-data branch" || true
          cd ..
        fi

    # Update operation - copies data from workspace to pipeline-data branch and commits
    - name: Update pipeline-data branch
      if: inputs.operation == 'update'
      shell: bash
      run: |
        cd pipeline-data-worktree

        # Ensure data directory exists
        mkdir -p data

        # Copy current data files from main workspace to pipeline-data branch
        # Use rsync if available for more efficient copying (only changed files)
        if command -v rsync &> /dev/null; then
          rsync -av --delete ../${{ inputs.source_path }} data/ --exclude=${{ inputs.exclude_pattern }}
        else
          rm -rf data/dump/ data/summaries/ 2>/dev/null || true  # Clean old directories if they exist
          cp -r ../${{ inputs.source_path }}. data/ 2>/dev/null || true
        fi

        # Add and commit changes
        git add -A data/
        git status
        git commit -m "${{ inputs.commit_message }}" || echo "No changes to commit"

        # Push with error handling
        git push origin pipeline-data || {
          echo "Failed to push to pipeline-data branch. This may indicate conflicts or network issues."
          echo "Manual intervention may be required to resolve this issue."
          exit 1
        }
        cd ..

    # Cleanup operation - removes the worktree
    - name: Cleanup worktree
      if: inputs.operation == 'cleanup'
      shell: bash
      run: git worktree remove pipeline-data-worktree || true
