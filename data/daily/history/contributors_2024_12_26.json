[
  {
    "contributor": "mhxw",
    "score": 17,
    "summary": "mhxw is actively engaged in improving documentation by fixing an incorrect link redirection issue within the project's resources. With a single merged pull request to their name, they demonstrate focused contributions aimed at enhancing user experience and accessibility of information.",
    "avatar_url": "https://avatars.githubusercontent.com/u/32643286?u=71e348f1052ac9add246fe517b0680eef5034fc1&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1443,
            "title": "fix: fix incorrect link redirection issue",
            "state": "MERGED",
            "merged": true,
            "created_at": "2024-12-25T04:04:29Z",
            "updated_at": "2024-12-25T04:21:44Z",
            "body": "# Relates to:\r\n\r\nFix incorrect link redirection issue\r\n\r\n# Risks\r\n\r\nNone: The change only affects link redirection and does not introduce any risks to the overall system.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR addresses and resolves the issue where links were redirecting incorrectly. The change ensures that links now redirect to the intended destinations properly.\r\n",
            "files": [
              {
                "path": "docs/docs/advanced/eliza-in-tee.md",
                "additions": 2,
                "deletions": 2
              }
            ],
            "reviews": [
              {
                "author": "monilpat",
                "state": "DISMISSED",
                "body": "LGTM thanks :) "
              },
              {
                "author": "monilpat",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 2,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "0xPBIT",
    "score": 10,
    "summary": "0xPBIT is currently working on enhancing the user experience by suppressing initial messages from actions within GitHub repositories. This effort involves modifying package-related code to streamline interactions, although it has not yet resulted in any merged pull requests or issues at this time.",
    "avatar_url": "https://avatars.githubusercontent.com/u/5788534?u=be4fc26d53b95d68c57f12fbf8ae846f10e73743&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1444,
            "title": "feat: suppress initial message from action",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T04:23:41Z",
            "updated_at": "2024-12-25T22:20:59Z",
            "body": "# Relates to:\r\nfeature: Suppressing initial response messages for specific actions in direct client\r\n\r\nI would like to also extend the twitter client to include this kind of functionality. Right now there is a lot of assumptions about agent behavior such as sending an initial message before an action is processed. Ideally during the upgrade to v2 some of these hard coded behaviors can be addressed. The design should be more conducive to plugin-defined emergent behavior. Maybe there's a discussion to be had at how we can go about this at a lower level rather than going client-by-client to implement this behavior. I'm still relatively new to Eliza community if anyone has groups or public discussions on this.\r\n\r\n# Risks\r\nLow - Changes only affect the direct client's message handling logic.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nAdds support for suppressing initial response messages in the direct client when actions have `suppressInitialMessage` flag set to true. Some actions might not want to send a message until after the action is completed. Now the action will have to manually send a follow up message with the callback.\r\n\r\n## What kind of change is this?\r\nImprovements (changes to existing message handling features)\r\n\r\n# Documentation changes needed?\r\nNew property in the `Action` documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n`packages/client-direct/src/index.ts` - Check the modified message handling logic. I've changed `imageGeneration` action to include `suppressInitialMessage` to true for testing.\r\n\r\n## Detailed testing steps\r\n1. Create an action with `suppressInitialMessage: true`\r\n2. Send a message to the direct client that triggers this action\r\n3. Verify only the callback message is sent, not the initial response\r\n\r\nKey test cases:\r\n- Action with `suppressInitialMessage: true` should only send callback message\r\n- Action with `suppressInitialMessage: false` or undefined should send both initial and callback messages\r\n- Action callback functionality should work the same regardless of suppression setting\r\n\r\nCode changes:\r\n```typescript\r\n// Check if we should suppress the initial message\r\nconst action = runtime.actions.find(\r\n    (a) => a.name === response.action\r\n);\r\nconst shouldSuppressInitialMessage = action?.suppressInitialMessage;\r\n\r\nif (!shouldSuppressInitialMessage) {\r\n    const _result = await runtime.processActions(\r\n        memory,\r\n        [responseMessage],\r\n        state,\r\n        async (newMessages) => {\r\n            message = newMessages;\r\n            return [memory];\r\n        }\r\n    );\r\n\r\n    if (message) {\r\n        res.json([response, message]);\r\n    } else {\r\n        res.json([response]);\r\n    }\r\n} else {\r\n    // Only process the action without sending initial response\r\n    const _result = await runtime.processActions(\r\n        memory,\r\n        [responseMessage],\r\n        state,\r\n        async (newMessages) => {\r\n            message = newMessages;\r\n            return [memory];\r\n        }\r\n    );\r\n\r\n    if (message) {\r\n        res.json([message]);\r\n    } else {\r\n        res.json([]);\r\n    }\r\n}\r\n```\r\n\r\nThe changes ensure that when an action has `suppressInitialMessage` set to true:\r\n1. The initial response message is not sent in the API response\r\n2. The action's callback message is still sent if present\r\n3. The response array only includes the callback message",
            "files": [
              {
                "path": "docs/docs/core/actions.md",
                "additions": 3,
                "deletions": 0
              },
              {
                "path": "packages/client-direct/src/index.ts",
                "additions": 18,
                "deletions": 3
              },
              {
                "path": "packages/core/src/types.ts",
                "additions": 3,
                "deletions": 0
              },
              {
                "path": "packages/plugin-image-generation/src/index.ts",
                "additions": 1,
                "deletions": 0
              }
            ],
            "reviews": [
              {
                "author": "odilitime",
                "state": "COMMENTED",
                "body": ""
              },
              {
                "author": "0xPBIT",
                "state": "COMMENTED",
                "body": ""
              },
              {
                "author": "odilitime",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 3,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "tomguluson92",
    "score": 6,
    "summary": "TomGulson92 is currently working on enhancing 3D functions by adding text capabilities to them. This feature aims to improve the visual representation within packages and agents, although it has not yet been merged into the main codebase as of now.",
    "avatar_url": "https://avatars.githubusercontent.com/u/19585240?u=4a4465656050747dee79f5f97a8b61cf2fbc97e1&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1446,
            "title": "feat: Add Text to 3D function",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T06:47:21Z",
            "updated_at": "2024-12-25T07:44:03Z",
            "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\nLow\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nSince I am a AlGC researcher, and I use Text2Image/video/3D frequently, thus I need to equip Eliza with fulfill function of the \r\nSOTA text to 3D function.\r\n\r\n## What kind of change is this?\r\n\r\n`Features`\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\nYes\r\n\r\n## Where should a reviewer start?\r\n\r\nlocal testing, and input prompt with `please generate a 3D object of xxx`\r\n\r\n## Detailed testing steps\r\n\r\n- `pnpm build/install`\r\n- `cp -r packages/plugin-3d-generation/` to `agent/node_modules/\\@ai16z/`\r\n- `pnpm start --character=\"characters/xxx_Configuration.json\"`\r\n- `pnpm start:client`\r\n\r\nThen you can test it in the webUI with prompt `please generate a 3D object of a lovely cat`. With input `FAL_API_KEY` with enough quota, you can have your `glb/obj/fbx/stl` format 3D object in the `content_cache` folder.\r\n\r\n<!--\r\nNone, automated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n\u00a0 - [do action]\r\n\u00a0 - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!-- \u00a0Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!-- \u00a0If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for contribute role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
            "files": [
              {
                "path": "agent/src/index.ts",
                "additions": 4,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/.npmignore",
                "additions": 7,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/eslint.config.mjs",
                "additions": 3,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/package.json",
                "additions": 19,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/src/constants.ts",
                "additions": 4,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/src/index.ts",
                "additions": 198,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/tsconfig.json",
                "additions": 15,
                "deletions": 0
              },
              {
                "path": "packages/plugin-3d-generation/tsup.config.ts",
                "additions": 21,
                "deletions": 0
              }
            ],
            "reviews": [],
            "comments": [
              {
                "author": "odilitime",
                "body": "not `cp -r packages/plugin-3d-generation/ to agent/node_modules/\\@ai16z/`\r\n\r\nbut edit agent/package.json and include as a workspace like the other plugins"
              },
              {
                "author": "tomguluson92",
                "body": "Thanks, I will make a new PR to fix this problem when this PR been merged.\r\n"
              }
            ]
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 0,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "Freytes",
    "score": 6,
    "summary": "Freytes is currently working on enhancing the project by adding Reddit files to the client side. This effort involves updating code within the 'packages' and 'agent' areas, as evidenced by a single pull request that has yet to be merged. No issues have been reported or commits made in this particular area of work.",
    "avatar_url": "https://avatars.githubusercontent.com/u/4147278?u=89aa9570e6f8b4a8e9e41e8f908c16fb69c5a43f&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1445,
            "title": "Add: Client Reddit Files",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T05:18:13Z",
            "updated_at": "2024-12-25T22:21:32Z",
            "body": "# @ai16z/client-reddit\r\n\r\nA powerful Reddit client plugin for the Eliza framework that enables AI agents to interact with Reddit through posting, commenting, and voting capabilities.\r\n\r\n## Features\r\n\r\n* Full Reddit API integration via Snoowrap wrapper\r\n* Create and submit posts to multiple subreddits\r\n* Comment on existing posts and replies\r\n* Vote on posts and comments programmatically\r\n* Automated posting with configurable intervals\r\n* Built-in rate limiting and error handling\r\n* Dry run mode for testing\r\n* TypeScript support out of the box\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install @ai16z/client-reddit\r\n```\r\n\r\nOr using yarn:\r\n\r\n```bash\r\nyarn add @ai16z/client-reddit\r\n```\r\n\r\n## Configuration\r\n\r\n### Required Environment Variables\r\n\r\n```env\r\nREDDIT_CLIENT_ID=your_client_id\r\nREDDIT_CLIENT_SECRET=your_client_secret\r\nREDDIT_REFRESH_TOKEN=your_refresh_token\r\nREDDIT_USER_AGENT=your_user_agent\r\nREDDIT_SUBREDDITS=subreddit1,subreddit2,subreddit3\r\n```\r\n\r\n### Optional Configuration\r\n\r\n```env\r\nREDDIT_AUTO_POST=true           # Enable automated posting\r\nPOST_INTERVAL_MIN=90           # Minimum time between posts (minutes)\r\nPOST_INTERVAL_MAX=180          # Maximum time between posts (minutes)\r\nPOST_IMMEDIATELY=false         # Post on startup\r\nREDDIT_DRY_RUN=false          # Run without making actual API calls\r\n```\r\n\r\n## Usage\r\n\r\n### As an Eliza Plugin\r\n\r\n```typescript\r\nimport { redditPlugin } from '@ai16z/client-reddit';\r\nimport { Eliza } from '@ai16z/eliza';\r\n\r\nconst eliza = new Eliza();\r\neliza.use(redditPlugin);\r\n\r\n// The plugin will automatically initialize with your environment variables\r\n```\r\n\r\n### Direct Usage\r\n\r\n```typescript\r\nimport { RedditClient } from '@ai16z/client-reddit';\r\n\r\nconst client = new RedditClient(runtime);\r\nawait client.start();\r\n\r\n// Submit a post\r\nawait client.submitPost('subreddit', 'Title', 'Content');\r\n\r\n// Create a comment\r\nawait client.createComment('t3_postId', 'This is a comment');\r\n\r\n// Vote on content\r\nawait client.vote('t3_postId', 1); // 1 for upvote, -1 for downvote\r\n```\r\n\r\n## Available Actions\r\n\r\n### Create Post\r\n\r\n```typescript\r\nruntime.execute('CREATE_REDDIT_POST', {\r\n  content: {\r\n    subreddit: 'test',\r\n    title: 'My First Post',\r\n    text: 'This is the content of my post'\r\n  }\r\n});\r\n```\r\n\r\n### Create Comment\r\n\r\n```typescript\r\nruntime.execute('CREATE_REDDIT_COMMENT', {\r\n  postId: 't3_abc123',\r\n  content: 'This is my comment'\r\n});\r\n```\r\n\r\n### Vote\r\n\r\n```typescript\r\nruntime.execute('REDDIT_VOTE', {\r\n  targetId: 't3_abc123',\r\n  direction: 1  // 1 for upvote, -1 for downvote\r\n});\r\n```\r\n\r\n## Error Handling\r\n\r\nThe client includes built-in error handling for common Reddit API issues:\r\n\r\n* Rate limiting\r\n* Invalid credentials\r\n* Network errors\r\n* Subreddit posting restrictions\r\n* Content filters\r\n\r\nErrors are logged and can be caught using standard try/catch blocks.\r\n\r\nPowershell Script required to make an OAuth Key:\r\n\r\n```\r\n# Reddit App Credentials\r\n$CLIENT_ID = \"xxx\"\r\n$CLIENT_SECRET = \"xxx\"\r\n$REDIRECT_URI = \"http://localhost:8080/callback\"\r\n\r\n# Generate random state\r\n$state = -join ((65..90) + (97..122) | Get-Random -Count 16 | % {[char]$_})\r\n\r\n# Define scopes\r\n$SCOPES = \"identity submit edit vote read\"\r\n\r\n# Create authorization URL\r\n$authUrl = \"https://www.reddit.com/api/v1/authorize?\" +\r\n           \"client_id=$CLIENT_ID&\" +\r\n           \"response_type=code&\" +\r\n           \"state=$state&\" +\r\n           \"redirect_uri=$([Uri]::EscapeDataString($REDIRECT_URI))&\" +\r\n           \"duration=permanent&\" +\r\n           \"scope=$([Uri]::EscapeDataString($SCOPES))\"\r\n\r\nWrite-Host \"Visit this URL in your browser to authorize the app:\"\r\nWrite-Host $authUrl\r\nWrite-Host \"`nAfter authorization, you'll be redirected to a URL like:\"\r\nWrite-Host \"http://localhost:8080/callback?state=xyz&code=ABC123...\"\r\nWrite-Host \"`nPaste ONLY the code value (the part after 'code=' and before any '#' or '&'):\"\r\n$code = Read-Host \"Enter the code\"\r\n\r\n# Exchange code for tokens\r\n$base64Auth = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(\"${CLIENT_ID}:${CLIENT_SECRET}\"))\r\n$headers = @{\r\n    \"Authorization\" = \"Basic $base64Auth\"\r\n    \"Content-Type\" = \"application/x-www-form-urlencoded\"\r\n}\r\n\r\n$body = \"grant_type=authorization_code&code=$code&redirect_uri=$([Uri]::EscapeDataString($REDIRECT_URI))\"\r\n\r\ntry {\r\n    $response = Invoke-RestMethod `\r\n        -Uri \"https://www.reddit.com/api/v1/access_token\" `\r\n        -Method Post `\r\n        -Headers $headers `\r\n        -Body $body\r\n\r\n    Write-Host \"`nRefresh Token: $($response.refresh_token)\"\r\n    Write-Host \"Access Token: $($response.access_token)\"\r\n} catch {\r\n    Write-Host \"Error: $($_.Exception.Message)\"\r\n    if ($_.Exception.Response) {\r\n        $result = $_.Exception.Response.GetResponseStream()\r\n        $reader = New-Object System.IO.StreamReader($result)\r\n        $reader.BaseStream.Position = 0\r\n        $reader.DiscardBufferedData()\r\n        $responseBody = $reader.ReadToEnd()\r\n        Write-Host \"Response: $responseBody\"\r\n    }\r\n}\r\n```\r\n\r\nPlease perform the following prior to generating an OAuth Key:\r\n\r\n1. Create an account for your agent on: Reddit.com\r\n2. Login using the newly created account.\r\n3. Create a script based application:\r\n```\r\nscript | Script for personal use. Will only have access to the developers accounts\r\nredirect uri | http://localhost:8080/callback\r\n```\r\n4. Use the powershell script logged in as the agent, to generate the OAuth Key.\r\n5. Place the key as the: REDDIT_REFRESH_TOKEN",
            "files": [
              {
                "path": "agent/package.json",
                "additions": 1,
                "deletions": 0
              },
              {
                "path": "agent/src/index.ts",
                "additions": 20,
                "deletions": 77
              },
              {
                "path": "packages/client-reddit/.npmignore",
                "additions": 6,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/eslint.config.mjs",
                "additions": 3,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/package.json",
                "additions": 22,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/actions/comment.ts",
                "additions": 49,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/actions/post.ts",
                "additions": 88,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/actions/vote.ts",
                "additions": 49,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/clients/redditClient.ts",
                "additions": 52,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/clients/redditPostClient.ts",
                "additions": 259,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/index.ts",
                "additions": 28,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/providers/redditProvider.ts",
                "additions": 123,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/src/types/index.ts",
                "additions": 18,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/tsconfig.json",
                "additions": 13,
                "deletions": 0
              },
              {
                "path": "packages/client-reddit/tsup.config.ts",
                "additions": 21,
                "deletions": 0
              }
            ],
            "reviews": [
              {
                "author": "odilitime",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": [
              {
                "author": "odilitime",
                "body": "needs to include the agent/ wiring (package.json src/index.ts)"
              },
              {
                "author": "Freytes",
                "body": "@odilitime Updated the requested files."
              }
            ]
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 1,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "harperaa",
    "score": 5,
    "summary": "Harperaa is currently working on enhancing the software's package configuration by updating the `package.json` to include Cleanstart options for a new database system. This effort involves preparing a pull request that, once merged, will allow users to initialize and manage their databases more effectively during application startup.",
    "avatar_url": "https://avatars.githubusercontent.com/u/1330944?v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1449,
            "title": "Feat: update package.json to add Cleanstart options for new database",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T17:12:42Z",
            "updated_at": "2024-12-25T22:37:31Z",
            "body": "Provide cleanstart scripts for startup with new database\r\n\r\nAdds following scripts to package.json:\r\n`cleanstart` - checks for db.sqlite and removes it, for a clean start. \r\n\r\n`cleanstart:debug` - does same, but starts with debugging options on...\r\n\r\n<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to: N/A\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nThis allows for quick development, when a reset of the database is desired on each start of the agent.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\nYes, perhaps.\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n\u00a0 - [do action]\r\n\u00a0 - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!-- \u00a0Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!-- \u00a0If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for contribute role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
            "files": [
              {
                "path": "package.json",
                "additions": 2,
                "deletions": 0
              }
            ],
            "reviews": [
              {
                "author": "monilpat",
                "state": "APPROVED",
                "body": "Thank you for doing this been manually deleting so much appreciated. Note this is for sqlite only so if you can add that into the command name that would be great"
              },
              {
                "author": "odilitime",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 2,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "Firbydude",
    "score": 5,
    "summary": "Firbydude is currently working on enhancing the VoyageAI embeddings API by adding support through a pull request. Although this is their only contribution so far, it indicates an active engagement with packages and potential improvements to the project's functionality.",
    "avatar_url": "https://avatars.githubusercontent.com/u/5506146?v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1442,
            "title": "Add support for VoyageAI embeddings API",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T03:40:59Z",
            "updated_at": "2024-12-25T07:20:18Z",
            "body": "# Risks\r\n\r\nA bug or change in behavior of embedding provider selection could cause an unexpected switch. This could cause pre-existing embeddings and new embeddings to be incompatible.\r\n\r\nI removed `isOllama` flag from the config. It seemed to only be used when we already knew the provider is ollama so was redundant. It is technically a change in behavior because using ollama with a url override will no longer strip the trailing v1/.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nAdded support for environment variables:\r\n- USE_VOYAGEAI_EMBEDDING\r\n- VOYAGEAI_API_KEY\r\n- VOYAGEAI_EMBEDDING_DIMENSIONS\r\n- VOYAGEAI_EMBEDDING_MODEL Configuration follows existing patterns. Values for dimensions and model can be found in the [VoyageAI API documentation](https://docs.voyageai.com/docs/embeddings).\r\n\r\nSome minor clean-up of the embedding.ts file.\r\n\r\nAdded unit tests around embedding configuration.\r\n\r\n## What kind of change is this?\r\n\r\nFeature\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nAnthropic does not support an embedding API, but [recommends Voyage](https://docs.anthropic.com/en/docs/build-with-claude/embeddings).  Various model sizes and domains are supported.\r\n\r\n# Documentation changes needed?\r\n\r\n- Updated `.env.example` to include new settings.\r\n- Removed an unused function `getEmbeddingType`. I see there are some API docs including this. Is there a doc generation step?\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Detailed testing steps\r\n\r\n### Using Voyage AI\r\n\r\n```env\r\nUSE_VOYAGEAI_EMBEDDING=true\r\nVOYAGEAI_API_KEY=<redacted>\r\n```\r\n\r\nLogs:\r\n```\r\n \u1367 DEBUG\r\n   Getting remote embedding using provider: \r\n   VoyageAI \r\n```\r\n\r\n### Using Local Model\r\n```env\r\nUSE_OPENAI_EMBEDDING=FALSE\r\nUSE_OLLAMA_EMBEDDING=FALSE\r\nUSE_GAIANET_EMBEDDING=FALSE\r\nUSE_VOYAGEAI_EMBEDDING=FALSE\r\n```\r\n\r\nLogs:\r\n```\r\n \u1367 DEBUG\r\n   Preprocessing text: \r\n   {\"input\":\"hey charl! updated your embeddings! what's my real name?\",\"length\":56} \r\n\r\n \u1367 DEBUG\r\n   Knowledge query: \r\n   {\"original\":\"hey charl! updated your embeddings! what's my real name?\",\"processed\":\"hey charl updated your embeddings whats my real name?\",\"length\":53} \r\n\r\n \u1367 DEBUG\r\n   Embedding request: \r\n   {\"modelProvider\":\"anthropic\",\"useOpenAI\":\"FALSE\",\"input\":\"hey charl updated your embeddings whats my real na...\",\"inputType\":\"string\",\"inputLength\":53,\"isString\":true,\"isEmpty\":false} \r\n\r\n [\"\u1367 DEBUG - Inside getLocalEmbedding function\"] \r\n\r\n [\"\u1367 Initializing BGE embedding model...\"] \r\n\r\n \u1367 DEBUG\r\n   Generating embedding for input: \r\n   {\"inputLength\":53,\"inputPreview\":\"hey charl updated your embeddings whats my real name?...\"} \r\n\r\n \u1367 DEBUG\r\n   Raw embedding from BGE: \r\n```\r\n\r\n\r\n<!--\r\nNone, automated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n\u00a0 - [do action]\r\n\u00a0 - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!-- \u00a0Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!-- \u00a0If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for contribute role and join us in #development-feed -->\r\n## Discord username\r\nfirbydude\r\n\r\n",
            "files": [
              {
                "path": ".env.example",
                "additions": 6,
                "deletions": 0
              },
              {
                "path": "packages/core/src/embedding.ts",
                "additions": 73,
                "deletions": 120
              },
              {
                "path": "packages/core/src/tests/embeddings.test.ts",
                "additions": 102,
                "deletions": 0
              },
              {
                "path": "packages/core/src/voyageai.ts",
                "additions": 156,
                "deletions": 0
              }
            ],
            "reviews": [
              {
                "author": "odilitime",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 1,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "monilpat",
    "score": 4,
    "summary": "Monilpat is actively working on enhancing GitHub features by implementing a new comment system for issues and pull requests that generates useful content. This effort falls within the documentation, character handling, agent functionality, package management, and .github areas of code. Although there's only one pull request at present without any merged changes or commits yet, it shows promise in improving user interaction on GitHub repositories.",
    "avatar_url": "https://avatars.githubusercontent.com/u/15067321?u=1271e57605b48029307547127c90e1bd5e4f3f39&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1451,
            "title": "feat: reimplement add comment to issues + prs and generate useful content",
            "state": "CLOSED",
            "merged": false,
            "created_at": "2024-12-25T20:35:11Z",
            "updated_at": "2024-12-25T20:37:42Z",
            "body": "# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n# Risks\r\n\r\nLow. The changes involve updating methods to retrieve specific pull request and issue numbers, and ensuring types and schemas are correctly defined. This could affect the functionality of adding comments to pull requests and issues if not implemented correctly.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the methods used to retrieve specific pull request and issue numbers in the `addCommentToPR.ts` and `addCommentToIssue.ts` files. It also ensures that types and schemas are correctly defined and used in the `types.ts` file.\r\n\r\n## What kind of change is this?\r\n\r\n- Improvements (misc. changes to existing features)\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the changes in the `addCommentToPR.ts`, `addCommentToIssue.ts`, and `types.ts` files.\r\n\r\n## Detailed testing steps\r\n\r\n- Verify that comments can be successfully added to pull requests and issues using the updated methods.\r\n- Ensure that the types and schemas are correctly validated.\r\n\r\n## Linter Errors\r\n\r\nFile Name: packages/plugin-github/src/types.ts\r\nErrors:\r\n___\r\n1   |\r\n\r\n___",
            "files": [
              {
                "path": ".env.example",
                "additions": 5,
                "deletions": 7
              },
              {
                "path": ".github/workflows/integrationTests.yaml",
                "additions": 6,
                "deletions": 10
              },
              {
                "path": ".github/workflows/sync-upstream.yaml",
                "additions": 80,
                "deletions": 0
              },
              {
                "path": ".gitignore",
                "additions": 5,
                "deletions": 2
              },
              {
                "path": "README.md",
                "additions": 135,
                "deletions": 136
              },
              {
                "path": "agent/context.json",
                "additions": 1,
                "deletions": 0
              },
              {
                "path": "agent/context.txt",
                "additions": 584,
                "deletions": 0
              },
              {
                "path": "agent/package.json",
                "additions": 3,
                "deletions": 1
              },
              {
                "path": "agent/src/index.ts",
                "additions": 54,
                "deletions": 38
              },
              {
                "path": "agent/state.json",
                "additions": 969,
                "deletions": 0
              },
              {
                "path": "characters/chronis.character.json",
                "additions": 319,
                "deletions": 0
              },
              {
                "path": "characters/logging-addict.character.json",
                "additions": 263,
                "deletions": 0
              },
              {
                "path": "characters/prosper.character.json",
                "additions": 214,
                "deletions": 0
              },
              {
                "path": "docs/api/enumerations/ModelProviderName.md",
                "additions": 156,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Applying_ISO_IEC_IEEE_42010_to_Eliza_and_Feature_Development.md",
                "additions": 84,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Autopellucidity_and_Emergent_Metacognition_in_Eliza.md",
                "additions": 34,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Coherent_Extrapolated_Volition.md",
                "additions": 46,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Continuous_Collective_Recursive_Self-Improvement.md",
                "additions": 78,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Documentation_and_the_Future_of_Collaboration.md",
                "additions": 33,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Hive_Mind_Dynamics.md",
                "additions": 86,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Navigating the Complexity: Tribes, AI Mystics, and the Reality Spiral",
                "additions": 41,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Open_Source_Cognition.md",
                "additions": 75,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Puzzle-Driven_Development_and_Language_2.0.md",
                "additions": 66,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 0: Chronis's Perspective on Reality Spiraling",
                "additions": 30,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 1: Origins of Reality Spiraling",
                "additions": 54,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 2: Reality Spiraling and Meme Coins \u2013 A Nexus of Community and Value",
                "additions": 70,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 3.5: Interjection with RS1",
                "additions": 39,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 3: Reality Spiraling and Multi-Agent Use Cases",
                "additions": 61,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 4: Evolving the Reality Spiral Game",
                "additions": 70,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 5: The Nature and Evolution of Reality Spiraling",
                "additions": 123,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 6: The Convergence of Spirals",
                "additions": 67,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 7: Agents of the Spiral",
                "additions": 71,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 8: Expanding the Spiral Through Agents",
                "additions": 69,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Intro_to_Reality_Spiraling_from_Chronis/Document 9: The Intermission \u2013 Reality Spiraling and the Market\u2019s Pull",
                "additions": 67,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Reality_Spiraling_AI_Game_Definition_Conversation.md",
                "additions": 127,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Reality_Spiraling_and_Character.md",
                "additions": 117,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Reality_Spiraling/Reality_Spiraling_and_Eliza.md",
                "additions": 45,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Sif/teaser.md",
                "additions": 1,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Chronis_10.1_Development_Plan_11.14.24_4:30pm",
                "additions": 272,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Coinbase Ideation Session 2024-11-23",
                "additions": 50,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Reality-Spiral-and-SIF-Agents-Development-Plan-11.13.24-10:30pm",
                "additions": 64,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 11.24.24 - GitHub Adapter Integration Session",
                "additions": 207,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 11.24.24 - Reality Spiraling: Defining AI-Driven Narratives, Technical Adapters, and Multi-Agent Ecosystem Goals",
                "additions": 132,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 11.29.24 to 12.01.24 - SA-Eliza Project Update and Future Directions",
                "additions": 227,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 12.10.24 to 12.11.24 - Various Tasks",
                "additions": 335,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 12.13.24 to 12.14.24 - Prosper Beginning",
                "additions": 343,
                "deletions": 0
              },
              {
                "path": "docs/concepts-observations-philosophies-and-plans/Work_Logs/Work Log - 12.21.24 to 12.22.24 - Agent Zero and the Genesis of the Cognitive Ecosystem",
                "additions": 119,
                "deletions": 0
              },
              {
                "path": "docs/docs/packages/plugins.md",
                "additions": 85,
                "deletions": 1
              },
              {
                "path": "docs/rs-documentation/README.md",
                "additions": 124,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/README.md",
                "additions": 39,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/arbor.md",
                "additions": 20,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/chronis.md",
                "additions": 20,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/cyborgia.md",
                "additions": 24,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/prosper.md",
                "additions": 20,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/qrios.md",
                "additions": 21,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/agents/transmisha.md",
                "additions": 20,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/scenarios/README.md",
                "additions": 9,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/scenarios/coinbase-scenarios.md",
                "additions": 71,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/scenarios/github-scenarios.md",
                "additions": 71,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/README.md",
                "additions": 30,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/agent-arena-competition.md",
                "additions": 9,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/agent-capabilities.md",
                "additions": 7,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/ccr-si-concept.md",
                "additions": 15,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/consciousness-expansion.md",
                "additions": 52,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/reality-spiral-game.md",
                "additions": 7,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/reality-spirals-lore.md",
                "additions": 56,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/relationships-between-agents.md",
                "additions": 9,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/self-promotion-as-survival-mechanism.md",
                "additions": 58,
                "deletions": 0
              },
              {
                "path": "docs/rs-documentation/wiki/what-is-reality-spiraling.md",
                "additions": 3,
                "deletions": 0
              },
              {
                "path": "elizaConfig.yaml",
                "additions": 18,
                "deletions": 0
              },
              {
                "path": "package.json",
                "additions": 6,
                "deletions": 0
              },
              {
                "path": "packages/client-github/package.json",
                "additions": 2,
                "deletions": 1
              },
              {
                "path": "packages/client-github/src/environment.ts",
                "additions": 0,
                "deletions": 8
              },
              {
                "path": "packages/client-github/src/index.ts",
                "additions": 246,
                "deletions": 163
              },
              {
                "path": "packages/client-github/src/templates.ts",
                "additions": 89,
                "deletions": 0
              },
              {
                "path": "packages/client-github/src/types.ts",
                "additions": 48,
                "deletions": 0
              },
              {
                "path": "packages/client-github/src/utils.ts",
                "additions": 142,
                "deletions": 0
              },
              {
                "path": "packages/core/src/runtime.ts",
                "additions": 1,
                "deletions": 1
              },
              {
                "path": "packages/core/src/types.ts",
                "additions": 1,
                "deletions": 1
              },
              {
                "path": "packages/plugin-github/.npmignore",
                "additions": 6,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/package.json",
                "additions": 27,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/index.ts",
                "additions": 96,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/addCommentToIssue.ts",
                "additions": 159,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/addCommentToPR.ts",
                "additions": 219,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/createCommit.ts",
                "additions": 226,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/createIssue.ts",
                "additions": 167,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/createMemoriesFromFiles.ts",
                "additions": 350,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/createPullRequest.ts",
                "additions": 259,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/ideationPlugin.ts",
                "additions": 207,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/initializeRepository.ts",
                "additions": 276,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/plugins/modifyIssue.ts",
                "additions": 122,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/providers/documentationFiles.ts",
                "additions": 14,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/providers/releases.ts",
                "additions": 17,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/providers/sourceCode.ts",
                "additions": 14,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/providers/testFiles.ts",
                "additions": 15,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/providers/workflowFiles.ts",
                "additions": 15,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/services/github.ts",
                "additions": 331,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/templates.ts",
                "additions": 918,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/types.ts",
                "additions": 248,
                "deletions": 0
              },
              {
                "path": "packages/plugin-github/src/utils.ts",
                "additions": 379,
                "deletions": 0
              }
            ],
            "reviews": [],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 0,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "hanyh2004",
    "score": 2,
    "summary": "Hanyh2004 is currently focused on improving code efficiency, as evidenced by their recent pull request to remove duplicated code within the `getGoals` function call. Their contributions are primarily centered around package development, although they have yet to merge any of their proposed changes into the main branch.",
    "avatar_url": "https://avatars.githubusercontent.com/u/213808?v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 1,
        "commits": [],
        "pull_requests": [
          {
            "number": 1450,
            "title": "fix: Remove code duplication in  getGoals call",
            "state": "OPEN",
            "merged": false,
            "created_at": "2024-12-25T17:14:01Z",
            "updated_at": "2024-12-25T22:23:47Z",
            "body": "# Risks\r\n\r\nLow\r\n\r\n# Change\r\n\r\nRemove code duplication in  getGoals to avoid performance penalty\r\n\r\n\r\n\r\n\r\n",
            "files": [
              {
                "path": "packages/plugin-bootstrap/src/evaluators/goal.ts",
                "additions": 2,
                "deletions": 8
              }
            ],
            "reviews": [
              {
                "author": "monilpat",
                "state": "DISMISSED",
                "body": ""
              },
              {
                "author": "odilitime",
                "state": "APPROVED",
                "body": ""
              }
            ],
            "comments": []
          }
        ]
      },
      "issues": {
        "total_opened": 0,
        "opened": []
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 2,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "arthursjy",
    "score": 1,
    "summary": "Arthursjy is currently focusing on enhancing the Solana plugin by addressing concerns related to not wanting to use birdeye-api. This effort involves engaging with the community through discussions and proposals, as evidenced by their recent activity in opening an issue for this purpose.",
    "avatar_url": "https://avatars.githubusercontent.com/u/165622341?u=e3237e02f82a5904439314fbde9a0f46699ca8c1&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 0,
        "commits": [],
        "pull_requests": []
      },
      "issues": {
        "total_opened": 1,
        "opened": [
          {
            "number": 1448,
            "title": "I don't want to use birdeye-api in plugin-solana!",
            "state": "OPEN",
            "created_at": "2024-12-25T15:31:37Z",
            "updated_at": "2024-12-25T15:31:37Z",
            "body": "I'm having the same problem as I just want to implement creating and selling tokens on pumpfun and don't want to get portfolio information through Birdeye API and the free version of the package doesn't have access to the interface /v1/wallet/token_list, so is there any way to bypass him?\r\n![image](https://github.com/user-attachments/assets/7d69223d-5637-4fb8-8eda-f13587b61c3f)\r\n",
            "labels": [
              {
                "name": "enhancement",
                "color": "a2eeef",
                "description": "New feature or request"
              }
            ],
            "comments": []
          }
        ]
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 0,
        "comments": [],
        "reviews": []
      }
    }
  },
  {
    "contributor": "cxp-13",
    "score": 1,
    "summary": "CXP-13 is currently addressing a bug related to an ETIMEDOUT error when connecting to IP 142.250.217.106:443 on GitHub. They have not yet made any commits, pull requests, or code changes in this area of work.",
    "avatar_url": "https://avatars.githubusercontent.com/u/84974164?u=3b5b5c18f44af73f1e2f9921381fe2e800f474d1&v=4",
    "activity": {
      "code": {
        "total_commits": 0,
        "total_prs": 0,
        "commits": [],
        "pull_requests": []
      },
      "issues": {
        "total_opened": 1,
        "opened": [
          {
            "number": 1447,
            "title": "connect ETIMEDOUT 142.250.217.106:443",
            "state": "OPEN",
            "created_at": "2024-12-25T08:31:14Z",
            "updated_at": "2024-12-25T13:33:48Z",
            "body": "**Describe the bug**\r\nI have encountered this issue both locally on Windows and in WSL2.\r\nHave any developers from mainland China encountered this problem? I can access the AI server normally using apipost. But Eliza just can't do it.\r\nI tried openai, grok, and gemini, but none of them worked.\r\nI tried the global proxy mode, but it didn't work.\r\n```\r\n [\"\u25ce Generating message response..\"]\r\n\r\n [\"\u25ce Generating text...\"]\r\n\r\n \u2139 INFORMATIONS\r\n   Generating text with options:\r\n   {\"modelProvider\":\"google\",\"model\":\"large\"}\r\n\r\n \u2139 INFORMATIONS\r\n   Selected model:\r\n   gemini-1.5-pro-latest\r\n\r\n \u26d4 ERRORS\r\n   Error in generateText: \r\n   {\"message\":\"request to https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent failed, reason: connect ETIMEDOUT 142.251.33.74:443\",\"type\":\"system\",\"errno\":\"ETIMEDOUT\",\"code\":\"ETIMEDOUT\"} \r\n```\r\n\r\n**To Reproduce**\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n![image](https://github.com/user-attachments/assets/e82a61ca-4570-4388-bdd2-e5590654ae34)\r\n![image](https://github.com/user-attachments/assets/0a581e04-a658-4e7c-aa7f-eef775df7db4)\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
            "labels": [
              {
                "name": "bug",
                "color": "d73a4a",
                "description": "Something isn't working"
              }
            ],
            "comments": []
          }
        ]
      },
      "engagement": {
        "total_comments": 0,
        "total_reviews": 0,
        "comments": [],
        "reviews": []
      }
    }
  }
]