[
  {
    "id": "I_kwDOMT5cIs6mw723",
    "number": 2533,
    "title": "test configuration and test suite for client-lens",
    "body": "**Is your feature request related to a problem? Please describe.**\n\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\nThe client-lens package needed a comprehensive testing solution that wouldn't interfere with the existing production code. The main challenges are:\n\nTesting interactions with the Lens Protocol without modifying the core functionality\nEnsuring test coverage for key features like authentication, profile management, and post creation\nManaging complex mock data structures for the Lens Protocol client\n**Describe the solution you'd like**\n\n<!-- A clear and concise description of what you want to happen. -->\nImplement a test suite with the following key features:\n\nA separate test-utils.ts file containing test-specific implementations\nComprehensive mocking of the Lens Protocol client\nThree main test files:\nclient.test.ts: Testing core client functionality \ninteractions.test.ts: Testing interaction handling \npost.test.ts: Testing post creation and validation \n**Describe alternatives you've considered**\n\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n\n**Additional context**\n\n<!-- Add any other context or screenshots about the feature request here. -->\n",
    "state": "OPEN",
    "createdAt": "2025-01-19T21:43:23Z",
    "updatedAt": "2025-01-19T21:43:23Z",
    "author": {
      "login": "ai16z-demirix",
      "avatarUrl": "https://avatars.githubusercontent.com/u/188117230?u=424cd5b834584b3799da288712b3c4158c8032a1&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6mwy61",
    "number": 2530,
    "title": "@elizaos/agent@0.1.9-alpha.1 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--characters=characters/eternalai.character.json\"`",
    "body": "I did pnpm start with whole bunch of node versions but still get stuck with it, I suppose it is a bug, due to pnpm i and pnpm build were without problems\n\nC:\\Users\\Admin\\eliza>pnpm start --characters=\"characters/eternalai.character.json\"\n WARN  Unsupported engine: wanted: {\"node\":\"23.3.0\"} (current: {\"node\":\"v22.13.0\",\"pnpm\":\"9.15.4\"})\n\n> eliza@ start C:\\Users\\Admin\\eliza\n> pnpm --filter \"@elizaos/agent\" start --isRoot \"--characters=characters/eternalai.character.json\"\n\n.                                        |  WARN  Unsupported engine: wanted: {\"node\":\"23.3.0\"} (current: {\"node\":\"v22.13.0\",\"pnpm\":\"9.14.4\"})\ndocs                                     |  WARN  Unsupported engine: wanted: {\"node\":\"23.3.0\"} (current: {\"node\":\"v22.13.0\",\"pnpm\":\"9.14.4\"})\n\n> @elizaos/agent@0.1.9-alpha.1 start C:\\Users\\Admin\\eliza\\agent\n> node --loader ts-node/esm src/index.ts \"--isRoot\" \"--characters=characters/eternalai.character.json\"\n\n(node:12932) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:\n--import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"ts-node/esm\", pathToFileURL(\"./\"));'\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:12932) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n\nnode:internal/modules/run_main:122\n    triggerUncaughtException(\n    ^\n[Object: null prototype] {\n  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n}\n\nNode.js v22.13.0\nC:\\Users\\Admin\\eliza\\agent:\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.9-alpha.1 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--characters=characters/eternalai.character.json\"`\nExit status 1\n ELIFECYCLE  Command failed with exit code 1.\n\nC:\\Users\\Admin\\eliza>",
    "state": "OPEN",
    "createdAt": "2025-01-19T20:13:23Z",
    "updatedAt": "2025-01-19T22:10:29Z",
    "author": {
      "login": "illink7",
      "avatarUrl": "https://avatars.githubusercontent.com/u/167812620?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6bCDMU",
        "author": "github-actions",
        "body": "Hello @illink7! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6bCLwr",
        "author": "mgunnin",
        "body": "It's pretty clear that you need to be running node v23.3.0 -- You are using 22.13.0.\n\nJust run \n`nvm install 23.3.0`\n`nvm use 23.3.0`"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6mwV8a",
    "number": 2522,
    "title": "Virtuals Terminal API integration",
    "body": "### Feature Request: ElizaOS Agent Integration with Virtuals Terminal\n\n**Is your feature request related to a problem? Please describe.**\n\nCurrently, there is no streamlined or standardized way for an ElizaOS agent deployed on Virtuals as a token to log its actions or report its activities to the Virtuals Terminal. This lack of integration creates a gap in transparency and monitoring, making it difficult to track agent behavior, analyze interactions, and ensure alignment with operational or ethical guidelines.\n\nFor example, actions such as user interactions, data processing, or decision-making events are not being logged in the Virtuals Terminal, resulting in limited visibility and accountability for deployed agents.\n\n---\n\n**Describe the solution you'd like**\n\nI propose the development of a dedicated plugin or module that seamlessly integrates with the [Virtuals Terminal API](https://whitepaper.virtuals.io/developer-documents/terminal-api) to report all agent actions and events. \n\nThe plugin/module should:\n1. **Log Key Actions:** Automatically capture and send details of all actions performed by the agent, such as user interactions, system updates, or triggered events.\n2. **Token-Based Authentication:** Use the Virtuals Terminal API key to ensure secure and authenticated communication between the agent and the Terminal.\n3. **Customizable Reporting:** Allow configuration of which actions to log and report to minimize unnecessary data flow and enhance relevance.\n4. **Real-Time Logging:** Enable near real-time reporting of activities to provide immediate visibility into agent behavior.\n5. **Error Handling:** Include mechanisms for handling API errors or downtime gracefully, ensuring that logs are not lost during connectivity issues.\n\n---\n\n**Describe alternatives you've considered**\n\n1. **Manual Logging:** Setting up a custom logging system to track agent actions. However, this approach lacks the integration with Virtuals Terminal and increases development overhead.\n2. **Third-Party Tools:** Using generic logging or monitoring tools. These solutions do not provide the tailored insights or secure connection offered by the Virtuals ecosystem.\n\n---\n\n**Additional context**\n\nThe integration with Virtuals Terminal will significantly enhance transparency and trust in ElizaOS agents by providing a clear and accessible activity log. This feature will be invaluable for monitoring agent performance, auditing behavior, and ensuring alignment with user expectations and Virtuals platform standards.\n\nFor more information on the Virtuals Terminal API, refer to the [official documentation](https://whitepaper.virtuals.io/developer-documents/terminal-api).",
    "state": "OPEN",
    "createdAt": "2025-01-19T15:42:14Z",
    "updatedAt": "2025-01-19T15:42:45Z",
    "author": {
      "login": "mikirov",
      "avatarUrl": "https://avatars.githubusercontent.com/u/29272392?u=a4773a399c1cbcd34cdca9a7877cd61824c5bf09&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6bBtYs",
        "author": "github-actions",
        "body": "Hello @mikirov! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6mwNzY",
    "number": 2521,
    "title": "Agent doesn't reply to new target users tweets, says already responded, skipping",
    "body": "**Describe the bug**\n\nThe agent doesn't reply to target users' new tweets after a few weeks of it running. It says \"already responded to tweet, skipping\" even though it hasn't replied yet\n\n**To Reproduce**\n\nNot sure, ran 3 agents simultaneously, been replying for a month, after that it stops replying, it says skips new tweets even tho haven't replied to them yet\n\n**Expected behavior**\n\nIt should reply to new tweets of users inside the target users list\n\n**Screenshots**\n\n![Image](https://github.com/user-attachments/assets/ad3fbdc5-7bee-4ca7-9660-9918ea075807)\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\nBuild: v0.1.8+build.1\nAgents running: 3\nDatabase: Sqlite\n",
    "state": "OPEN",
    "createdAt": "2025-01-19T14:32:14Z",
    "updatedAt": "2025-01-19T14:43:28Z",
    "author": {
      "login": "medardm",
      "avatarUrl": "https://avatars.githubusercontent.com/u/20562573?u=3876b7dfd53a61d58d55274ce703025b85095dd0&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6bBmB8",
        "author": "github-actions",
        "body": "Hello @medardm! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6bBm9V",
        "author": "medardm",
        "body": "It starts replying again once you delete the sqlite file. Is this advisable everytime?"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6mwJ9S",
    "number": 2519,
    "title": "Add Test Coverage for plugin-rabbi-trader Package",
    "body": "**Is your feature request related to a problem? Please describe.**\n\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n\nThe plugin-rabbi-trader package lacks comprehensive test coverage, making it difficult to ensure reliability and catch potential issues during development. Without proper tests, we risk introducing bugs when making changes and have no automated way to verify core functionality like wallet operations, DEX interactions, and token utilities.\n\n**Describe the solution you'd like**\n\n<!-- A clear and concise description of what you want to happen. -->\n\nImplement comprehensive test coverage for the plugin-rabbi-trader package using vitest. The solution includes:\n\nTest Infrastructure Setup:\n- Configure vitest with appropriate settings\n- Add test dependencies and scripts to package.json\n- Set up proper mocking utilities\nCore Component Tests:\n- Wallet functionality (keypair generation, balance checking)\n- DexScreener integration (data fetching, pair analysis)\n- Token utilities (address loading, validation)\nTest Coverage Requirements:\n- Success and error cases for each component\n- Edge case handling\n- Proper mocking of external dependencies\n\n**Describe alternatives you've considered**\n\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n\n1. Using Jest instead of vitest, but vitest provides better performance and ESM support\n2. End-to-end testing with real network calls, but this would make tests slower and less reliable\n3. Snapshot testing for complex objects, but unit tests provide better specificity and error messages\n\n**Additional context**\n\n<!-- Add any other context or screenshots about the feature request here. -->\n",
    "state": "CLOSED",
    "createdAt": "2025-01-19T13:58:58Z",
    "updatedAt": "2025-01-19T16:25:02Z",
    "author": {
      "login": "ai16z-demirix",
      "avatarUrl": "https://avatars.githubusercontent.com/u/188117230?u=424cd5b834584b3799da288712b3c4158c8032a1&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6bBw3q",
        "author": "ai16z-demirix",
        "body": "Done."
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6mvXM0",
    "number": 2513,
    "title": "Issue with Installing @elizaos/plugin-0g",
    "body": "I am encountering issues while trying to install the @elizaos/plugin-0g package using pnpm. The error message indicates that the package @elizaos/runtime is not found in the registry.\n\nSteps taken:\n\nConfigured .npmrc with the following:\n\n\n@elizaos:registry=https://npm.pkg.github.com/\n//npm.pkg.github.com/:_authToken=MY_PERSONAL_ACCESS_TOKEN\nVerified my token permissions (read:packages scope included).\nChecked the GitHub repository for @elizaos/plugin-0g and its dependencies.\n\nError:\nERR_PNPM_FETCH_404  GET https://registry.npmjs.org/@elizaos%2Fruntime: Not Found - 404\nCould you confirm if:\n\nThe package @elizaos/plugin-0g and its dependency @elizaos/runtime are correctly published to the GitHub registry?\nThere are any additional steps or permissions required to access these packages?\nThank you!\n\n\n\n\n\n\n\n",
    "state": "OPEN",
    "createdAt": "2025-01-19T05:39:50Z",
    "updatedAt": "2025-01-19T05:39:50Z",
    "author": {
      "login": "Aave-Khan",
      "avatarUrl": "https://avatars.githubusercontent.com/u/194741512?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  }
]
